I"ô<h2 id="background">Background</h2>
<p>Remote Code Execution occurs when external code can execute internal operating-system-level commands on a server from a distance.</p>

<p>Once an attacker gains access to the internal OS-level, they can perform tasks equivalent to a logged-in user:</p>

<ul>
  <li>Read, add, modify, delete files</li>
  <li>Change access privileges, passwords</li>
  <li>Turn on and off configurations and services</li>
  <li>Communicate with other servers</li>
</ul>

<p>While this is a potent attack, executing it is challenging. There is a division between the operating system and the software it runs, and casual access is not possible. However, there are access pathways as most programming languages have functions allowing direct communication with the underlying OS.</p>

<p>To achieve Remote Code Execution, two conditions must be met:</p>

<ol>
  <li>A programmer must use a function enabling communication with the OS.</li>
  <li>An attacker must find a way to input dynamic data into that function call.</li>
</ol>

<p><img src="/img/posts/CodeHack.jpg" alt="IMDb page" /></p>

<h2 id="common-system-execution-operations">Common System Execution Operations</h2>

<p>Common Functions for OS Communication in Various Programming Languages:</p>

<ul>
  <li>system, %x, exec, ``</li>
  <li>shell, sh, shell_exec
open
popen
proc_open
call
subprocess
spawn
passthru
eval
Note: This is not an exhaustive list, but it includes keywords that should raise concerns if observed in code.</li>
</ul>

:ET